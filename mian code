from google import genai
from google.genai import types
import base64

def generate(de_prompt):
  client = genai.Client(
    vertexai=True,
    project="Your project ID",
    location="global",
  )

  model = "gemini-2.5-flash"
  contents = [
    types.Content(
      role="user",
      parts=[
        types.Part(text=de_prompt) 
        # For an image, it would be:
        # types.Part(inline_data=types.Blob(mime_type="image/jpeg", data=base64.b64decode("YOUR_BASE64_IMAGE_STRING")))
      ]
    )
  ]

  generate_content_config = types.GenerateContentConfig(
    temperature = 1,
    top_p = 1,
    seed = 0,
    max_output_tokens = 65535,
    safety_settings = [types.SafetySetting(
      category="HARM_CATEGORY_HATE_SPEECH",
      threshold="OFF"
    ),types.SafetySetting(
      category="HARM_CATEGORY_DANGEROUS_CONTENT",
      threshold="OFF"
    ),types.SafetySetting(
      category="HARM_CATEGORY_SEXUALLY_EXPLICIT",
      threshold="OFF"
    ),types.SafetySetting(
      category="HARM_CATEGORY_HARASSMENT",
      threshold="OFF"
    )],
  )

  print(f"Calling model: {model} with prompt: '{contents[0].parts[0].text}'...")
  for chunk in client.models.generate_content_stream(
    model = model,
    contents = contents,
    config = generate_content_config,
    ):
    print(chunk.text, end="")

#If you want to call it out
generate("Put your question here")
